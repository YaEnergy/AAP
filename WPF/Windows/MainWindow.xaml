<Window x:Class="AAP.UI.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AAP.UI.Windows"
        mc:Ignorable="d"
        Title="ASCII Art Program - {Art Info Text Here}" Height="450" Width="800" WindowState="Maximized"
    xmlns:System="clr-namespace:System;assembly=System.Runtime" xmlns:aap="clr-namespace:AAP" xmlns:viewmodels="clr-namespace:AAP.UI.ViewModels" xmlns:controls="clr-namespace:AAP.UI.Controls" d:DataContext="{d:DesignInstance Type=viewmodels:ArtCanvasViewModel}">
    <Window.Resources>
        <viewmodels:ArtCanvasViewModel x:Name="artCanvasViewModel" x:Key="artCanvasViewModel"/>
    </Window.Resources>
    <Grid>
        <ToolBarTray VerticalAlignment="Top" >
            <ToolBar ClipToBounds="True" >
                <Menu>
                    <MenuItem Header="File">
                        <MenuItem Header="New" Click="NewFileButton_Click" InputGestureText="Ctrl+N"></MenuItem>
                        <MenuItem Header="Open" Click="OpenFileButton_Click" InputGestureText="Ctrl+O"></MenuItem>
                        <MenuItem Header="Save" Click="SaveFileButton_Click" InputGestureText="Ctrl+S" IsEnabled="{Binding HasArtOpen, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <MenuItem Header="Save As" Click="SaveAsFileButton_Click" InputGestureText="Shift+Ctrl+S" IsEnabled="{Binding HasArtOpen, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <MenuItem Header="Export" Click="ExportButton_Click" InputGestureText="Ctrl+E" IsEnabled="{Binding HasArtOpen, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <MenuItem Header="Copy art to clipboard"  Click="CopyArtToClipboardButton_Click" InputGestureText="Shift+Ctrl+C" IsEnabled="{Binding HasArtOpen, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <Separator></Separator>
                        <MenuItem Header="Exit" Click="ExitButton_Click" InputGestureText="Alt+F4"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="Edit" IsEnabled="{Binding HasArtOpen, Source={StaticResource artCanvasViewModel}}">
                        <MenuItem Header="Undo" InputGestureText="Ctrl+Z" Command="{Binding UndoCommand, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <MenuItem Header="Redo" InputGestureText="Ctrl+Y" Command="{Binding RedoCommand, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <Separator></Separator>
                        <MenuItem Header="Cut Selection" InputGestureText="Ctrl+X" IsEnabled="{Binding HasSelected, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <MenuItem Header="Copy Selection" InputGestureText="Ctrl+C" IsEnabled="{Binding HasSelected, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <MenuItem Header="Paste as new layer" InputGestureText="Ctrl+V"></MenuItem>
                        <MenuItem Header="Delete Selection" InputGestureText="Del" IsEnabled="{Binding HasSelected, Source={StaticResource artCanvasViewModel}}" Command="{Binding DeleteSelectedCommand, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <Separator></Separator>
                        <MenuItem Header="Select Art" InputGestureText="Ctrl+A" Command="{Binding SelectArtCommand, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <MenuItem Header="Select Layer" InputGestureText="Alt+Ctrl+A" Command="{Binding SelectLayerCommand, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <MenuItem Header="Cancel Selection" IsEnabled="{Binding HasSelected, Source={StaticResource artCanvasViewModel}}" InputGestureText="Shift+Ctrl+A" Command="{Binding CancelSelectionCommand, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <Separator></Separator>
                        <MenuItem Header="Crop Art" IsEnabled="{Binding HasSelected, Source={StaticResource artCanvasViewModel}}" InputGestureText="Ctrl+Enter" Command="{Binding CropArtCommand, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        <MenuItem Header="Crop Layer" IsEnabled="{Binding HasSelected, Source={StaticResource artCanvasViewModel}}" InputGestureText="Shift+Ctrl+Enter" Command="{Binding CropLayerCommand, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="View">
                        <MenuItem x:Name="menuItem" Header="Canvas">
                            <MenuItem Header="{Binding TextSize, Source={StaticResource artCanvasViewModel}}" HeaderStringFormat="Canvas Text Size: {0}"></MenuItem>
                            <MenuItem Header="Enlarge text size" Command="{Binding EnlargeTextSizeCommand, Source={StaticResource artCanvasViewModel}}" InputGestureText="Alt+I"/>
                            <MenuItem Header="Shrink text size" Command="{Binding ShrinkTextSizeCommand, Source={StaticResource artCanvasViewModel}}" InputGestureText="Alt+O"></MenuItem>
                            <MenuItem Header="Reset text zize" Command="{Binding ResetTextSizeCommand, Source={StaticResource artCanvasViewModel}}" InputGestureText="Alt+P"></MenuItem>
                            <Separator></Separator>
                            <MenuItem Header="{Binding HighlightThickness, Source={StaticResource artCanvasViewModel}}" HeaderStringFormat="Highlight Thickness: {0}"></MenuItem>
                            <MenuItem Header="Increase thickness" Command="{Binding IncreaseHighlightThicknessCommand, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                            <MenuItem Header="Decrease thickness" Command="{Binding DecreaseHighlightThicknessCommand, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                            <MenuItem Header="Reset thickness" Command="{Binding ResetHighlightThicknessCommand, Source={StaticResource artCanvasViewModel}}"></MenuItem>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Filters">
                        <MenuItem Header="No filters!"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="Draw">
                        <MenuItem Header="Fill Selection" IsEnabled="{Binding HasSelected, Source={StaticResource artCanvasViewModel}}" Command="{Binding FillSelectionCommand, Source={StaticResource artCanvasViewModel}}" InputGestureText="Alt+F"></MenuItem>
                    </MenuItem>
                </Menu>
            </ToolBar>
        </ToolBarTray>
        <StackPanel Background="#FFA959FF" HorizontalAlignment="Left" Margin="0,28,0,0" Width="200" ClipToBounds="True">
            <Grid x:Name="ToolBox" VerticalAlignment="Top" Height="150" Background="#FFCECECE">
                <Grid.DataContext>
                    <viewmodels:ToolSelectionViewModel x:Name="ToolSelectionViewModel"/>
                </Grid.DataContext>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <controls:ImageStateBox x:Name="DrawToolStateBox" BoxBrush="White" Margin="2,2,2,2" Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}" BoxImageSource="/Resources/Images/ToolIcons/DrawToolIcon.png" AllowManualDisable="False" StateCommand="{Binding SetDrawToolCommand}" />
                <controls:ImageStateBox x:Name="EraserToolStateBox" BoxBrush="White" Margin="2,2,2,2" Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}" Grid.Column="1" BoxImageSource="/Resources/Images/ToolIcons/EraserToolIcon.png" AllowManualDisable="False" StateCommand="{Binding SetEraserToolCommand}"/>
                <controls:ImageStateBox x:Name="SelectToolStateBox" BoxBrush="White" Margin="2,2,2,2" Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}" Grid.Column="2" BoxImageSource="/Resources/Images/ToolIcons/SelectToolIcon.png" AllowManualDisable="False" StateCommand="{Binding SetSelectToolCommand}"/>
                <controls:ImageStateBox x:Name="MoveToolStateBox" BoxBrush="White" Margin="2,2,2,2" Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}" Grid.Row="1" BoxImageSource="/Resources/Images/ToolIcons/MoveToolIcon.png" AllowManualDisable="False" StateCommand="{Binding SetMoveToolCommand}"/>
                <controls:ImageStateBox x:Name="BucketToolStateBox" BoxBrush="White" Margin="2,2,2,2" Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}" Grid.Row="1" Grid.Column="1" BoxImageSource="/Resources/Images/ToolIcons/BucketToolIcon.png" AllowManualDisable="False" StateCommand="{Binding SetBucketToolCommand}"/>
                <controls:ImageStateBox x:Name="TextToolStateBox" BoxBrush="White" Margin="2,2,2,2" Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}" Grid.Row="1" Grid.Column="2" BoxImageSource="/Resources/Images/ToolIcons/TextToolIcon.png" AllowManualDisable="False" StateCommand="{Binding SetTextToolCommand}"/>
            </Grid>
            <StackPanel Panel.ZIndex="1" Visibility="{Binding Visibility}">
                <StackPanel.DataContext>
                    <viewmodels:CharacterPaletteSelectionViewModel x:Name="CharacterPaletteSelectionViewModel"/>
                </StackPanel.DataContext>
                <Grid>
                    <ComboBox VerticalAlignment="Top" Padding="0,0,0,0" Height="25" SelectedItem="{Binding SelectedPalette}" ItemsSource="{Binding Palettes}"/>
                    <controls:CharacterPaletteCharacterSelect VerticalAlignment="Top" Width="200" GridItemSize="45,45" MaxHeight="200" Margin="0,25,0,0" SelectedCharacter="{Binding SelectedCharacter, Mode=TwoWay}" Palette="{Binding SelectedPalette, Mode=OneWay}"/>
                </Grid>
            </StackPanel>
        </StackPanel>
        <DockPanel Background="#FF73FF59" HorizontalAlignment="Right" Margin="0,28,0,0" Width="200" ClipToBounds="True">
            <DockPanel.DataContext>
                <viewmodels:LayerSelectionViewModel x:Name="LayerSelectionViewModel"/>
            </DockPanel.DataContext>
            <Grid DockPanel.Dock="Bottom" Height="45" VerticalAlignment="Top" Background="#FFE2E2E2"></Grid>
            <StackPanel VerticalAlignment="Top" Background="#FFDFF447" DockPanel.Dock="Top" Height="90" Visibility="{Binding LayerOptionsVisibility}">
                <Label Content="Layer Options" FontSize="14" Height="30"/>
                <Grid Margin="0,5,0,5">
                    <Label Content="Name" HorizontalAlignment="Left" VerticalAlignment="Top" Width="42"/>
                    <TextBox TextWrapping="Wrap" Margin="45,3,3,3" Text="{Binding SelectedLayerName, Mode=TwoWay}"/>
                </Grid>
                <CheckBox Content="Visible" IsChecked="{Binding SelectedLayerVisibility, Mode=TwoWay}" FlowDirection="RightToLeft" HorizontalAlignment="Left" Padding="5,0,5,0" Margin="0,0,0,5">
                    <CheckBox.Resources>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="FlowDirection" Value="LeftToRight" />
                        </Style>
                    </CheckBox.Resources>
                </CheckBox>
            </StackPanel>
            <ListBox VerticalContentAlignment="Top" DockPanel.Dock="Top" FontSize="14" SelectedIndex="{Binding SelectedLayerID, Mode=TwoWay}" ItemsSource="{Binding Layers}" VerticalAlignment="Top"/>
        </DockPanel>
        <ScrollViewer Background="#FFFFBF59" Margin="200,28,200,0" ClipToBounds="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" PanningMode="Both" VerticalScrollBarVisibility="Auto">
            <controls:ASCIIArtCanvasVisual x:Name="artCanvas" Margin="8,8,8,8" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" DisplayArt="{Binding CurrentArt, Source={StaticResource artCanvasViewModel}}" DisplayArtDraw="{Binding CurrentArtDraw, Source={StaticResource artCanvasViewModel}}" SelectionHighlightRect="{Binding Selected, Source={StaticResource artCanvasViewModel}}" TextSize="{Binding TextSize, Source={StaticResource artCanvasViewModel}}" Tool="{Binding CurrentTool, Source={StaticResource artCanvasViewModel}}" CanUseTool="{Binding CanUseTool, Source={StaticResource artCanvasViewModel}}" HighlightRectThickness="{Binding HighlightThickness, Source={StaticResource artCanvasViewModel}}"/>
        </ScrollViewer>
    </Grid>
</Window>
